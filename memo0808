리스너 * 어나니머스 프로그래밍을 이용해서 유용한 프로그래밍이 가능하지만, 지금은 없어짐.

type lecttice

인터페이스 -> 타입을 정의하는 가장 좋은 표현법 이지만, 타입을 정의하는데에는 postcondition, precondition까지를 정의하지만, 인터페이스는 해당 내용을 할 의무가 없어서 어설픈 타입 정의방법이다.

abstraction -> subclassing  // abstraction은 extends된 클래스를 또 상속 할 수 없음. -> deligation()이랑 거의 비슷함.
 ** deligation은 하나의 클래스로만 정의를 해놔야 함.
interface -> subtyping

visitor pattern // -> 파티션 타입에서 사용할 때 사용함.
(하나의 집합을 정의할때, 부분집합들이 교집합을 가지지 않는것을 파티션이라고 함.)

\


